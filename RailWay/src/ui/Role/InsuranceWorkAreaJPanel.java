/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Role;

import Business.RailCompany.RailCompany;
import Business.RailCompany.Train;
import Business.Passenger.Passenger;
import Business.EcoSystem;
import Business.Order.Order;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class InsuranceWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InsuranceWorkAreaJPanel
     */
    private JPanel mainScreen;
    private UserAccount userAccount;
    private EcoSystem system;
    public InsuranceWorkAreaJPanel(JPanel mainScreen, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.mainScreen = mainScreen;
        this.userAccount = userAccount;
        this.system = system;
        populatetblCus();
        System.out.println(userAccount.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();
        declinejButton = new javax.swing.JButton();
        acceptjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("BM Hanna 11yrs Old", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 102));
        jLabel1.setText("Passengers with Insurance");

        tblCus.setBackground(new java.awt.Color(255, 204, 204));
        tblCus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Passenger Name", "Passenger Id", "Phone Number", "RailNumber ID", "Rail Company", "Order Number", "Insurance", "Claim"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCus.setGridColor(new java.awt.Color(0, 0, 153));
        jScrollPane1.setViewportView(tblCus);

        declinejButton.setText("Decline");
        declinejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declinejButtonActionPerformed(evt);
            }
        });

        acceptjButton.setText("Accept");
        acceptjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(acceptjButton)
                .addGap(18, 18, 18)
                .addComponent(declinejButton)
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(declinejButton)
                    .addComponent(acceptjButton))
                .addContainerGap(156, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void declinejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declinejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCus.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to operate", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                for (Order od : rc.getOrderList()) {
                    if (od.getOrder_id().equals((String) tblCus.getValueAt(selectedRow, 5))) {
                        if(od.getClaim().equals("Pending")){
                            od.setClaim("Declined");
                            JOptionPane.showMessageDialog(this, "This order has been declined", "Warning", JOptionPane.WARNING_MESSAGE);
                            populatetblCus();
                            return;
                        }else{
                            JOptionPane.showMessageDialog(this, "This oder can not be operated.", "Warning", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        
                    }
                }
                    
            }
            
        }
    }//GEN-LAST:event_declinejButtonActionPerformed

    private void acceptjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCus.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to operate", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                for (Order od : rc.getOrderList()) {
                    if (od.getOrder_id().equals((String) tblCus.getValueAt(selectedRow, 5))) {
                        if(od.getClaim().equals("Pending")){
                            od.setClaim("Accept");
                            JOptionPane.showMessageDialog(this, "This order has been accepted", "Warning", JOptionPane.WARNING_MESSAGE);
                            populatetblCus();
                            return;
                        }else{
                            JOptionPane.showMessageDialog(this, "This oder can not be operated.", "Warning", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        
                    }
                }
                    
            }
            
        }
    }//GEN-LAST:event_acceptjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptjButton;
    private javax.swing.JButton declinejButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCus;
    // End of variables declaration//GEN-END:variables

    private void populatetblCus() {
        DefaultTableModel model = (DefaultTableModel) tblCus.getModel();
        model.setRowCount(0);
        for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
            for(Passenger cus : system.getPassengerDirectory().getPassengerList()){
                for(Order order : rc.getOrderList()){
                    if(order.getPassengerName().equals(cus.getPassengerName()) && order.isInsurance()){
                        Object[] row = new Object[8];
                        row[0] = cus.getPassengerName();
                        row[1] = cus.getPassengerId();
                        row[2] = cus.getPhoneNum();
                        row[3] = order.getRailNum_id();
                        row[4] = order.getRailCompany();
                        row[5] = order.getOrder_id();
                        row[6] = order.isInsurance()? "Yes" : "No";
                        row[7] = order.getClaim();
                        model.addRow(row);
                    }
                }
            }
        }
    }
}
