/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Role;

import Business.RailCompany.RailCompany;
import Business.Passenger.Passenger;
import Business.EcoSystem;
import Business.Order.Order;
import Business.RailCompany.RailNumber;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class GroundWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CompensatorWorkAreaJPanel
     */
    private JPanel mainScreen;
    private UserAccount userAccount;
    private EcoSystem system;
    public GroundWorkAreaJPanel(JPanel mainScreen, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.mainScreen = mainScreen;
        this.userAccount = userAccount;
        this.system = system;
        populatetblCus();
        System.out.println(userAccount.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        tblCus.setBackground(new java.awt.Color(255, 204, 204));
        tblCus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Passenger Name", "Phone Number", "Passenger Id", "RailNumber_id", "Time Status", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCus.setGridColor(new java.awt.Color(0, 51, 204));
        jScrollPane1.setViewportView(tblCus);

        jLabel1.setFont(new java.awt.Font("BM Hanna 11yrs Old", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 102));
        jLabel1.setText(" Delay Infomation");

        jButton1.setText("Refund");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/对不起.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(105, 105, 105))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCus.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to operate", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String orderID = (String)tblCus.getValueAt(selectedRow, 0);
        String railNum = (String)tblCus.getValueAt(selectedRow, 4);
        String timeStatus = (String)tblCus.getValueAt(selectedRow, 5);
        String orderStatus = (String)tblCus.getValueAt(selectedRow, 6);
        for(RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()){
            for(RailNumber rn : rc.getRailNumberList()){
                for(Order order : rc.getOrderList()){
          
              if(order.getOrder_id().equals(orderID)&&rn.getRailNum_id().equals(railNum)){
                        if(timeStatus.equals("Delay")&&orderStatus.equals("Processing")){
                            order.setStatus("Cancelled");
                            order.setClaim("Not available");
                            populatetblCus(); 
                            JOptionPane.showMessageDialog(this, "Refund Successfully", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
                        }else{
                        JOptionPane.showMessageDialog(this, "You can not operate this order.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
                        }
              
                }}
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCus;
    // End of variables declaration//GEN-END:variables

    private void populatetblCus() {
        DefaultTableModel model = (DefaultTableModel) tblCus.getModel();
        model.setRowCount(0);
        
        for(RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()){
            for(RailNumber rn : rc.getRailNumberList()){
                for(Order order : rc.getOrderList()){
                    for(Passenger cus : system.getPassengerDirectory().getPassengerList()){
                        if(order.getPassengerName().equals(cus.getPassengerName()) 
                             && rn.getRailNum_id().equals(order.getRailNum_id()) 
                                && rn.isTimeStatus()==true){
                            Object[] row = new Object[7];
                            row[0] = order.getOrder_id();
                            row[1] = cus.getPassengerName();
                            row[2] = cus.getPhoneNum();
                            row[3] = cus.getPassengerId();
                            row[4] = order.getRailNum_id();
                            row[5] = rn.isTimeStatus()? "Delay" : "On time";
                            row[6] = order.getStatus();
                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }
}
