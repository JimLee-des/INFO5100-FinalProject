/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Role;

import Business.Passenger.Passenger;
import Business.EcoSystem;
import Business.Role.PassengerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ManagePassengerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePassengerJPanel
     */
    JPanel mainScreen;
    EcoSystem system;
    UserAccount userAccount;
    public ManagePassengerJPanel(JPanel mainScreen, EcoSystem system) {
        initComponents();
        this.mainScreen = mainScreen;
        this.system = system;
        populateTblCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        txtUsername = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPpn = new javax.swing.JTextField();
        txtPwd = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtOption = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        txtTn = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        tblCustomer.setBackground(new java.awt.Color(255, 204, 204));
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "User Name", "Password", "Passenger Name", "Passenger Id", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.setGridColor(new java.awt.Color(51, 0, 204));
        tblCustomer.setShowGrid(true);
        jScrollPane1.setViewportView(tblCustomer);

        btnCreate.setBackground(new java.awt.Color(108, 139, 241));
        btnCreate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("Password:");

        txtPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPwdActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Phone Number:");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Username:");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Passenger IDï¼š");

        txtOption.setBackground(new java.awt.Color(255, 153, 102));
        txtOption.setFont(new java.awt.Font("BM Hanna 11yrs Old", 1, 36)); // NOI18N
        txtOption.setForeground(new java.awt.Color(255, 153, 102));
        txtOption.setText("Passenger Information");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Passenger Name:");

        btnUpdate.setBackground(new java.awt.Color(108, 139, 241));
        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(108, 139, 241));
        btnDelete.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnConfirm.setBackground(new java.awt.Color(108, 139, 241));
        btnConfirm.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnConfirm.setText("Confirm Update");
        btnConfirm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtTn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(128, 128, 128))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(129, 129, 129))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPpn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(backJButton)
                            .addGap(94, 94, 94)
                            .addComponent(txtOption))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addComponent(txtOption))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnConfirm))
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed

        String userName=txtUsername.getText();
        String password=txtPwd.getText();
        String passengerName = txtName.getText();
        String passengerId = txtPpn.getText();
        String phoneNum = txtTn.getText();
        
        if(userName.length() == 0 || passengerId.length() == 0 || password.length()==0 || passengerName.length() == 0 ||phoneNum.length() ==0){
            JOptionPane.showMessageDialog(null, "Please check the blank space");
            return;
        }

        if (!passengerName.matches("[a-zA-Z]+")){
            JOptionPane.showMessageDialog(null, "Please check the input of passenger name");
            return;
        }
        
        try {
            Integer.parseInt(phoneNum);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please check the phone number format");
            return;
        }
        
        if(phoneNum.length() != 10){
            JOptionPane.showMessageDialog(null, "Please check the number of phone number digits");
            return;
        }
        
        if (system.getUserAccountDirectory().checkIfUsernameIsUnique(userName)==false) {
            JOptionPane.showMessageDialog(this,"It is already existed.");
        }else{
            UserAccount ua1 =system.getUserAccountDirectory().createUserAccount(passengerName, userName,password,new PassengerRole());
            Passenger cust= system.getPassengerDirectory().createPassenger(passengerName, passengerId, phoneNum);
            cust.setUs(ua1);
            populateTblCustomer();
            txtUsername.setText("");
            txtPwd.setText("");
            txtPpn.setText("");
            txtTn.setText("");
            txtName.setText("");
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPwdActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectRow = tblCustomer.getSelectedRow();

        if(selectRow>=0){
            String username= (String) tblCustomer.getValueAt(selectRow, 0);
            String pwd= (String) tblCustomer.getValueAt(selectRow, 1);
            userAccount=system.getUserAccountDirectory().authenticateUser(username, pwd);
            txtUsername.setText(userAccount.getUsername()+"");
            txtUsername.setEnabled(false);
            txtPwd.setText(userAccount.getPassword()+"");
            txtName.setText(userAccount.getName()+"");
            txtName.setEnabled(false);
            txtPpn.setEnabled(false);
            for(int i = 0;i < system.getPassengerDirectory().getPassengerList().size(); i++){
                if(system.getPassengerDirectory().getPassengerList().get(i).getPassengerName().equals(userAccount.getName())){
                    txtPpn.setText(system.getPassengerDirectory().getPassengerList().get(i).getPassengerId()+"");
                    txtTn.setText(system.getPassengerDirectory().getPassengerList().get(i).getPhoneNum()+"");
                }
            }
           

        }
        else {
            JOptionPane.showMessageDialog(null,"Please select a row");
        }

        btnCreate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnConfirm.setEnabled(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomer.getSelectedRow();
        if(selectedRow>=0){
            String username= (String) tblCustomer.getValueAt(selectedRow, 0);
            String pwd= (String) tblCustomer.getValueAt(selectedRow, 1);
            UserAccount user=system.getUserAccountDirectory().authenticateUser(username, pwd);
            system.getUserAccountDirectory().deleteUserAccount(user);
            system.getPassengerDirectory().deletePassenger((String) tblCustomer.getValueAt(selectedRow, 2));
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
        populateTblCustomer();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:

        String userName=txtUsername.getText();
        String password=txtPwd.getText();
        String passengerName = txtName.getText();
        String passengerId = txtPpn.getText();
        String phoneNum = txtTn.getText();
        
        if(userName.length() == 0 || passengerId.length() == 0 || password.length()==0 || passengerName.length() == 0 ||phoneNum.length() ==0){
            JOptionPane.showMessageDialog(null, "Please check the blank space");
            return;
        }
        if (!passengerName.matches("[a-zA-Z]+")){
            JOptionPane.showMessageDialog(null, "Please check the input of passenger name");
            return;
        }
        try {
            Integer.parseInt(phoneNum);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please check the phone number format");
            return;
        }
        
        if(phoneNum.length() != 10){
            JOptionPane.showMessageDialog(null, "Please check the number of phone number digits");
            return;
        }
        
            system.getUserAccountDirectory().updateUserAccount(userAccount,userName,password);
            for(UserAccount ua : system.getUserAccountDirectory().getUserAccountList()){
                System.out.println(ua.getUsername());
            }
            int selectedRow = tblCustomer.getSelectedRow();
            system.getPassengerDirectory().updatePassenger((String) tblCustomer.getValueAt(selectedRow,2), passengerName, passengerId, phoneNum);
            populateTblCustomer();
            btnCreate.setEnabled(true);
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnConfirm.setEnabled(false);
            txtUsername.setEnabled(true);
            txtName.setEnabled(true);
            txtPpn.setEnabled(true);

            txtUsername.setText("");
            txtPwd.setText("");
            txtName.setText("");
            txtPpn.setText("");
            txtTn.setText("");
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        mainScreen.remove(this);
        Component[] componentArray = mainScreen.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) mainScreen.getLayout();
        layout.previous(mainScreen);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel txtOption;
    private javax.swing.JTextField txtPpn;
    private javax.swing.JPasswordField txtPwd;
    private javax.swing.JTextField txtTn;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTblCustomer() {
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        model.setRowCount(0);
        for (UserAccount user : system.getUserAccountDirectory().getUserAccountList()) {
            if ("Business.Role.PassengerRole".equals(user.getRole().toString())) {
                Object[] row = new Object[5];
                row[0] = user.getUsername();
                row[1] = user.getPassword();
                for(int i = 0;i < system.getPassengerDirectory().getPassengerList().size(); i++){
                    if(system.getPassengerDirectory().getPassengerList().get(i).getPassengerName()==null){
                        continue;
                    }else if(system.getPassengerDirectory().getPassengerList().get(i).getPassengerName().equals(user.getName())){
                        row[2] = user.getName();
                        row[3] = system.getPassengerDirectory().getPassengerList().get(i).getPassengerId();
                        row[4] = system.getPassengerDirectory().getPassengerList().get(i).getPhoneNum();
                    }
                }
                model.addRow(row);
            }
        }
    }
}
