/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Role;

import Business.RailCompany.RailCompany;
import Business.Passenger.Passenger;
import Business.EcoSystem;
import Business.Order.Order;
import Business.RailCompany.RailNumber;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class PassengerOrderListJPanel extends javax.swing.JPanel {

    private JPanel mainScreen;
    private UserAccount userAccount;
    private EcoSystem system;
    private Passenger passenger;

    /**
     * Creates new form RequestLabTestJPanel
     */
    public PassengerOrderListJPanel(JPanel mainScreen, UserAccount userAccount, EcoSystem system,Passenger passenger) {
        initComponents();
        this.mainScreen = mainScreen;
        this.userAccount = userAccount;
        this.system = system;
        this.passenger = passenger;
        populateFlt();
        System.out.println(userAccount.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFlt = new javax.swing.JTable();
        applyforInsurancejButton2 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 221, 236));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jTextField1.setBackground(new java.awt.Color(204, 204, 255));
        jTextField1.setFont(new java.awt.Font("BM Hanna 11yrs Old", 0, 36)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 153, 102));
        jTextField1.setText("View Your Order History");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 750, 70));

        btnDelete.setBackground(new java.awt.Color(204, 204, 255));
        btnDelete.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnDelete.setText("Cancel");
        btnDelete.setBorder(applyforInsurancejButton2.getBorder());
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, -1, -1));

        tblFlt.setBackground(new java.awt.Color(204, 204, 255));
        tblFlt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblFlt.setFont(new java.awt.Font("Gill Sans", 0, 12)); // NOI18N
        tblFlt.setForeground(new java.awt.Color(51, 51, 255));
        tblFlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RailNumber_id", "Departure", "Destination", "Train_id", "Departure Time", "Arriving Time", "Price", "Rail Company", "Order_id", "Status", "Insurance", "Claim"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFlt);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 720, 180));

        applyforInsurancejButton2.setBackground(new java.awt.Color(250, 231, 231));
        applyforInsurancejButton2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        applyforInsurancejButton2.setText("Apply for Insurance Claim");
        applyforInsurancejButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyforInsurancejButton2ActionPerformed(evt);
            }
        });
        add(applyforInsurancejButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, -1, -1));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        mainScreen.remove(this);
        Component[] componentArray = mainScreen.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) mainScreen.getLayout();
        layout.previous(mainScreen);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFlt.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to cancel!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                 for(RailNumber rn : rc.getRailNumberList()){
                for (Order od : rc.getOrderList()) {
                    if (od.getOrder_id().equals((String) tblFlt.getValueAt(selectedRow, 8))&&rn.getRailNum_id()
                            .equals((String) tblFlt.getValueAt(selectedRow, 0)) && od.getStatus().equals("Processing")) {
                        od.setStatus("Cancelled");
                        od.setClaim("Not available");
                        rn.getPassengerList().remove(passenger);
                        JOptionPane.showMessageDialog(this, "Your order cancelled successfully!", "Warning", JOptionPane.WARNING_MESSAGE);
                        populateFlt();
                        return;
                    }
                        
                        
                    }
                }
            }
            JOptionPane.showMessageDialog(this, "The order can not be cancelled!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void applyforInsurancejButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyforInsurancejButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFlt.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to operate", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                for (Order od : rc.getOrderList()) {
                    if (od.getOrder_id().equals((String) tblFlt.getValueAt(selectedRow, 8))) {
                        if(od.getClaim().equals("Available")&&od.getStatus().equals("Done")){
                            od.setClaim("Pending");
                            JOptionPane.showMessageDialog(this, "Your claim has been submitted!", "Warning", JOptionPane.WARNING_MESSAGE);
                            populateFlt();
                            return;
                        }else{
                            JOptionPane.showMessageDialog(this, "This order can not be operated anymore!", "Warning", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        
                    }
                }
                    
            }
            
        }
    }//GEN-LAST:event_applyforInsurancejButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyforInsurancejButton2;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblFlt;
    // End of variables declaration//GEN-END:variables

    private void populateFlt() {
        DefaultTableModel model = (DefaultTableModel) tblFlt.getModel();
        model.setRowCount(0);
        Passenger cust = system.getPassengerDirectory().findPassengerByUsername(userAccount.getUsername());
        System.out.println(cust.getUs());


        for (Order od : cust.getOrderList()) {

            Object[] row = new Object[12];
            row[0] = od.getRailNum_id();
            row[1] = od.getDeparture();
            row[2] = od.getDestination();
            row[3] = od.getTrain_id();
            row[4] = od.getDepartureTime();
            row[5] = od.getArrivingTime();
            row[6] = od.getPrice();
            row[7] = od.getRailCompany();
            row[8] = od.getOrder_id();
            row[9] = od.getStatus();
            row[10] = od.isInsurance() ? "Yes" : "No";
            row[11] = od.getClaim();
            model.addRow(row);

        }

    }
}
