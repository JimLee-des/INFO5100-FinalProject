/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Role;

import Business.RailCompany.RailCompany;
import Business.RailCompany.RailNumber;
import Business.RailCompany.Train;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ManageTrainJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageTrainJPanel
     */
    private JPanel mainScreen;
    private UserAccount userAccount;
    private EcoSystem system;
    public ManageTrainJPanel(JPanel mainScreen, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.mainScreen = mainScreen;
        this.userAccount = userAccount;
        this.system = system;
        populatetblFlt();
        populatetblAp();
        System.out.println(userAccount.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        cbRepair = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFlt = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnDelete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        txtTrain_id = new javax.swing.JTextField();
        btnCheck = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        btnAssign = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAp = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cbRepair.setText("Repair requirement");
        cbRepair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRepairActionPerformed(evt);
            }
        });

        tblFlt.setBackground(new java.awt.Color(255, 204, 204));
        tblFlt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblFlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RailNumber_id", "Departure", "Destination", "Departure time", "Arriving time", "Trail_id.", "Price", "Rail Company"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFlt.setGridColor(new java.awt.Color(51, 0, 204));
        jScrollPane3.setViewportView(tblFlt);

        jLabel8.setText("Capacity:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Train_id:");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(108, 139, 241));
        btnCreate.setText("Create Train");
        btnCreate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtTrain_id.setBorder(null);

        btnCheck.setText("Need Repairment");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("BM Hanna 11yrs Old", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 102));
        jLabel2.setText("Rail Information");

        txtCapacity.setBorder(null);

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        tblAp.setBackground(new java.awt.Color(255, 204, 204));
        tblAp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Train_id", "Capacity", "Repair requirement", "Occupation Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAp.setGridColor(new java.awt.Color(51, 0, 204));
        jScrollPane2.setViewportView(tblAp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAssign)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addGap(99, 99, 99))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbRepair)
                                    .addComponent(txtTrain_id, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCheck)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(269, 269, 269)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(jSeparator2))
                    .addContainerGap(482, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTrain_id, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbRepair)
                        .addGap(18, 18, 18)
                        .addComponent(btnCreate)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnCheck))
                        .addGap(53, 53, 53))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(164, 164, 164)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(42, 42, 42)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(376, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        mainScreen.remove(this);
        Component[] componentArray = mainScreen.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) mainScreen.getLayout();
        layout.previous(mainScreen);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populatetblFlt();
        populatetblAp();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed

        String train_id = txtTrain_id.getText();
        String capacity = txtCapacity.getText();
        if(train_id.length() == 0 || capacity.length() == 0){
            JOptionPane.showMessageDialog(null, "Please check the blank space!");
            return;
        }
        try {
            int cap = Integer.parseInt(capacity);
            if (cap < 1){
                JOptionPane.showMessageDialog(null, "Capacity cannot less than 1");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Capacity cannot have string include");
            return;
        }
        boolean repairStatus = cbRepair.isSelected();
        for(RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()){
                if(rc.getRailCompanyName().equals(userAccount.getName())){
                    if(rc.checkIfTrainIsUnique(train_id) == false){
                        JOptionPane.showMessageDialog(this,"It is already existing! ");
                }else{
                        Train train = new Train(train_id, capacity, repairStatus);
                        rc.addTrain(train);
                        populatetblAp();
                        txtTrain_id.setText("");
                        txtCapacity.setText("");
                        cbRepair.setSelected(false);


                    } 
                }
        }

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAp.getSelectedRow();
        if(selectedRow>=0){
            String train_id = (String) tblAp.getValueAt(selectedRow, 0);
            for(RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()){
                if(rc.getRailCompanyName().equals(userAccount.getName())){
                    for(int i = 0; i< rc.getTrainList().size(); i++){
                        if(rc.getTrainList().get(i).getTrain_id().equals(train_id)){
                            rc.deleteTrain(train_id);;
                        }
                    }
                }
            }
            populatetblAp();
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAp.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table to operate", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                for (Train train : rc.getTrainList()) {
                    if (train.getTrain_id().equals((String) tblAp.getValueAt(selectedRow, 0))) {
                        if(!train.isRepairStatus()){
                            train.setRepairStatus(true);
                            JOptionPane.showMessageDialog(this, "This status of repair has been changed", "Warning", JOptionPane.WARNING_MESSAGE);
                            populatetblAp();
                            return;
                        }else{
                            JOptionPane.showMessageDialog(this, "This oder can not be operated.", "Warning", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        
                    }
                }
                    
            }
            
        }
        
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblFlt.getSelectedRow();
        int selectedRow1 = tblAp.getSelectedRow();

        if (selectedRow >= 0 && selectedRow1 >= 0) {
            String id = (String) tblAp.getValueAt(selectedRow1, 0);
            String fid = (String) tblFlt.getValueAt(selectedRow, 0);

            for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
                if (rc.getRailCompanyName().equals(userAccount.getName())) {

                    for (int i = 0; i < rc.getTrainList().size(); i++) {
                        for (int a = 0; a < rc.getTrainList().size(); a++) {
                           if (rc.getTrainList().get(i).isRepairStatus()&&rc.getTrainList().get(i).getTrain_id().equals(id)) {
                                JOptionPane.showMessageDialog(this, "The train needs repairing first!");
                                return;
                            }
                            
                            if (rc.getTrainList().get(i).isUsingStatus()&&rc.getTrainList().get(i).getTrain_id().equals(id)) {
                                JOptionPane.showMessageDialog(this, "This train has been Occupied!");
                                return;
                            }
                            
                            if (rc.getTrainList().get(i).getTrain_id().equals(id)
                                    && rc.getRailNumberList().get(a).getRailNum_id().equals(fid)
                                    && rc.getTrainList().get(i).isUsingStatus() == false
                                    && rc.getRailNumberList().get(a).getTrain_id() == null) {

                                rc.getTrainList().get(i).setUsingStatus(true);
                                rc.getRailNumberList().get(a).setTrain_id(rc.getTrainList().get(i).getTrain_id());
                                populatetblFlt();
                                populatetblAp();
                                JOptionPane.showMessageDialog(this, "Assign Successfully!");
                                return;
                            }
                        }

                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row on two Table.");
        }
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void cbRepairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRepairActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRepairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JCheckBox cbRepair;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblAp;
    private javax.swing.JTable tblFlt;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtTrain_id;
    // End of variables declaration//GEN-END:variables

    private void populatetblFlt() {
        DefaultTableModel model = (DefaultTableModel) tblFlt.getModel();
        model.setRowCount(0);
        for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
            if(rc.getRailCompanyName().equals(userAccount.getName())){
                for(RailNumber rn : rc.getRailNumberList()){
                    if(rn.isStatus() == false){
                        Object[] row = new Object[8];
                        row[0] = rn.getRailNum_id();
                        row[1] = rn.getDeparture();
                        row[2] = rn.getDestination();
                        row[3] = rn.getDepartureTime();
                        row[4] = rn.getArrivingTime();
                        row[5] = (rn.getTrain_id()==null)? "Not Assigned Yet" : rn.getTrain_id();
                        row[6] = rn.getPrice();
                        row[7] = rc.getRailCompanyName();
                        model.addRow(row);
                        
                    }
                        
                }
                        
            }
        }
    }
    
    private void populatetblAp() {
        DefaultTableModel model = (DefaultTableModel) tblAp.getModel();
        model.setRowCount(0);
        for (RailCompany rc : system.getRailCompanyDirectory().getRailCompanyList()) {
            if(rc.getRailCompanyName().equals(userAccount.getName())){
                for(Train train : rc.getTrainList()){
                    Object[] row = new Object[4];
                    row[0] = train.getTrain_id();
                    row[1] = train.getCapacity();
                    row[2] = train.isRepairStatus()? "Yes" : "No";
                    row[3] = train.isUsingStatus()? "Occupied" : "Not Occupied";
                    model.addRow(row);
                }
            }
        }
    }
}
